---
# Display installation information and get user confirmation
- name: R2.1 Display PostgreSQL installation information
  ansible.builtin.debug:
    msg: |
      ===========================================
      POSTGRESQL INSTALLATION INFORMATION
      ===========================================
      Version: {{ postgresql_version }}
      Data Directory: {{ postgresql_data_dir }}
      Config Directory: {{ postgresql_config_dir }}
      ===========================================
      Do you want to proceed with the installation?
      Please enter '1' for yes or '0' for no.
  run_once: true
  delegate_to: "{{ groups['postgresql'][0] }}"

- name: R2.2 Get user confirmation
  ansible.builtin.pause:
    prompt: "Enter 1 to continue or 0 to abort"
    echo: yes
  register: user_confirmation
  run_once: true
  delegate_to: "{{ groups['postgresql'][0] }}"

- name: R2.3 Set fact for user confirmation
  ansible.builtin.set_fact:
    confirmed: "{{ user_confirmation.user_input == '1' }}"
  run_once: true
  delegate_to: "{{ groups['postgresql'][0] }}"

- name: R2.4 Abort if user did not confirm
  ansible.builtin.fail:
    msg: "Installation aborted by user"
  when: not confirmed
  run_once: true
  delegate_to: "{{ groups['postgresql'][0] }}"

# Disable the built-in PostgreSQL module (only if it exists)
- name: R2.5 Disable built-in PostgreSQL module
  ansible.builtin.command:
    cmd: "sudo dnf -qy module disable postgresql"
  ignore_errors: yes  # Ignore errors if the module does not exist

# Remove existing pgdg-redhat-repo if installed
- name: R2.6 Remove existing pgdg-redhat-repo if installed
  ansible.builtin.command:
    cmd: "sudo dnf remove -y pgdg-redhat-repo-42.0-50PGDG.noarch"
  ignore_errors: yes  # Ignore errors if the package does not exist

# Add PostgreSQL repository
- name: R2.7 Install PostgreSQL repository RPM
  ansible.builtin.command:
    cmd: "sudo dnf --disablerepo=* install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm"

# Install PostgreSQL
- name: R2.8 Install PostgreSQL
  ansible.builtin.command:
    cmd: "sudo dnf --disablerepo=* --enablerepo=pgdg16 install -y postgresql16-server"

# Optionally initialize the database
- name: R2.9 Initialize PostgreSQL database
  ansible.builtin.command:
    cmd: "/usr/pgsql-16/bin/postgresql-16-setup initdb"

# Enable and start PostgreSQL service
- name: R2.10 Enable PostgreSQL service
  ansible.builtin.systemd:
    name: postgresql-16
    enabled: yes

- name: R2.11 Start PostgreSQL service
  ansible.builtin.service:
    name: postgresql-16
    state: started

# Create PostgreSQL data directory
- name: R2.12 Create PostgreSQL data directory
  ansible.builtin.file:
    path: "{{ postgresql_data_dir }}"
    state: directory
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: '0700'

# Configure PostgreSQL
- name: R2.13 Configure PostgreSQL
  ansible.builtin.template:
    src: postgresql.conf.j2
    dest: "{{ postgresql_config_dir }}/postgresql.conf"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: '0600'
  notify: restart postgresql

# Configure pg_hba.conf
- name: R2.14 Configure pg_hba.conf
  ansible.builtin.template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_config_dir }}/pg_hba.conf"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: '0600'
  notify: restart postgresql 