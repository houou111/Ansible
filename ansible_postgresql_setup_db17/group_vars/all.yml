---
# Base directories
base_data_dir: /data
base_config_dir: /etc
base_log_dir: /var/log

# Repository configuration
pgdg_repo_name: pgdg
pgdg_repo_description: "PostgreSQL {{ postgresql_version }} Repository"
pgdg_repo_baseurl: "https://download.postgresql.org/pub/repos/yum/{{ postgresql_version }}/redhat/rhel-$YUM_RELEASEVER-$YUM_ARCH"
pgdg_repo_gpgkey: https://download.postgresql.org/pub/repos/yum/RPM-GPG-KEY-PGDG
pgdg_repo_gpgcheck: yes
pgdg_repo_enabled: yes

epel_repo_name: epel-release
epel_repo_state: present

# PostgreSQL configuration
postgresql_version: "17"
postgresql_user: postgres
postgresql_group: postgres

# PostgreSQL directories
postgresql_data_dir: "{{ base_data_dir }}/postgresql/data"
postgresql_config_dir: "{{ base_data_dir }}/postgresql/config"
postgresql_wal_dir: "{{ base_data_dir }}/postgresql/wal"
postgresql_archive_dir: "{{ base_data_dir }}/postgresql/archive"
postgresql_log_dir: "{{ base_data_dir }}/postgresql/log"

# PostgreSQL configuration parameters
postgresql_max_connections: 100
postgresql_shared_buffers: 128MB
postgresql_effective_cache_size: 4GB
postgresql_maintenance_work_mem: 256MB
postgresql_work_mem: 16MB
postgresql_wal_buffers: 16MB
postgresql_checkpoint_completion_target: 0.9
postgresql_random_page_cost: 1.1
postgresql_effective_io_concurrency: 200
postgresql_autovacuum: "on"
postgresql_log_min_duration_statement: 1000
postgresql_log_checkpoints: "on"
postgresql_log_connections: "on"
postgresql_log_disconnections: "on"
postgresql_log_line_prefix: '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

# PostgreSQL service
postgresql_service_name: "postgresql-{{ postgresql_version }}"
postgresql_service_state: started
postgresql_service_enabled: yes

# etcd configuration
etcd_version: "3.5"
etcd_user: etcd
etcd_group: etcd
etcd_data_dir: "{{ base_data_dir }}/etcd/data"
etcd_config_dir: "{{ base_data_dir }}/etcd/config"
etcd_client_port: 2379
etcd_peer_port: 2380
etcd_initial_cluster_token: "etcd-cluster-1"
etcd_initial_cluster_state: "new"
etcd_service_name: etcd
etcd_service_state: started
etcd_service_enabled: yes

# Patroni configuration
patroni_scope: "postgres"
patroni_namespace: "/service"
patroni_etcd_hosts: "{% for host in groups['etcd'] %}{{ hostvars[host]['inventory_hostname'] }}:{{ etcd_client_port }}{% if not loop.last %},{% endif %}{% endfor %}"
patroni_data_dir: "{{ base_data_dir }}/patroni"
patroni_config_dir: "{{ base_data_dir }}/patroni/config"
patroni_log_dir: "{{ base_data_dir }}/patroni/log"
patroni_service_name: patroni
patroni_service_state: started
patroni_service_enabled: yes

# Authentication
postgres_password: postgres
replicator_password: replicator
postgresql_replication_user: replicator
postgresql_replication_password: "replicator123"

# System limits
system_limits:
- { limit_type: '-', limit_item: 'nofile', value: 65536 }
- { limit_type: '-', limit_item: 'nproc', value: 32768 }
- { limit_type: '-', limit_item: 'stack', value: 32768 }
